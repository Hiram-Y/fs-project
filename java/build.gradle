
buildscript {
    ext {
        springBootVersion = '2.3.2.RELEASE'
        shadowVersion = '4.0.3'
    }
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.github.jengelman.gradle.plugins:shadow:${shadowVersion}")
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'idea'

    version = '0.0.1-SNAPSHOT'

    sourceCompatibility = 1.8
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
        jcenter()
    }

    // 定义版本号
    ext {
        lombokVersion = '1.18.12'
        cliVersion = '1.4'
        nettyVersion = '4.1.36.Final'
        lang3Version = '3.9'
        pool2Version = '2.6.2'
        springBootVersion = '2.3.2.RELEASE'
        springCloudVersion = '2.2.6.RELEASE'
        feignVersion = '10.10.1' // based on cloud version
        scalaVersion = '2.12'
        sparkVersion = '3.2.0'
        flinkVersion = '1.13.2'
        hadoopVersion = '2.7.7'
        swaggerVersion = '2.9.2'
        tensorflowVersion = '1.12.0'
        zookeeperVersion = '3.5.8'
        curatorVersion = '4.3.0' // with zookeeper compatibility
        mongodbVersion = '3.12.8'
        mysqlVersion = '5.1.48'
        rabbitmqVersion = '5.10.0'
        elasticVersion = '7.15.1'
        flowableVersion = '6.6.0'
    }

    dependencies {
        compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        testCompileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    }

    task jars(type: Copy) {
        from configurations.runtime
        into 'build/opt' // 目标依赖位置
    }

}
